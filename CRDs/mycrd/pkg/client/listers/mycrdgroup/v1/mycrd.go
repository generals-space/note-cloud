/*
   哇咔咔, 我是文件头!!!
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "mycrd/pkg/apis/mycrdgroup/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MyCrdLister helps list MyCrds.
type MyCrdLister interface {
	// List lists all MyCrds in the indexer.
	List(selector labels.Selector) (ret []*v1.MyCrd, err error)
	// MyCrds returns an object that can list and get MyCrds.
	MyCrds(namespace string) MyCrdNamespaceLister
	MyCrdListerExpansion
}

// myCrdLister implements the MyCrdLister interface.
type myCrdLister struct {
	indexer cache.Indexer
}

// NewMyCrdLister returns a new MyCrdLister.
func NewMyCrdLister(indexer cache.Indexer) MyCrdLister {
	return &myCrdLister{indexer: indexer}
}

// List lists all MyCrds in the indexer.
func (s *myCrdLister) List(selector labels.Selector) (ret []*v1.MyCrd, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MyCrd))
	})
	return ret, err
}

// MyCrds returns an object that can list and get MyCrds.
func (s *myCrdLister) MyCrds(namespace string) MyCrdNamespaceLister {
	return myCrdNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MyCrdNamespaceLister helps list and get MyCrds.
type MyCrdNamespaceLister interface {
	// List lists all MyCrds in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.MyCrd, err error)
	// Get retrieves the MyCrd from the indexer for a given namespace and name.
	Get(name string) (*v1.MyCrd, error)
	MyCrdNamespaceListerExpansion
}

// myCrdNamespaceLister implements the MyCrdNamespaceLister
// interface.
type myCrdNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MyCrds in the indexer for a given namespace.
func (s myCrdNamespaceLister) List(selector labels.Selector) (ret []*v1.MyCrd, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MyCrd))
	})
	return ret, err
}

// Get retrieves the MyCrd from the indexer for a given namespace and name.
func (s myCrdNamespaceLister) Get(name string) (*v1.MyCrd, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("mycrd"), name)
	}
	return obj.(*v1.MyCrd), nil
}
