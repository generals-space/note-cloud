apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.myapigroups.k8s.generals.space
  labels:
    api: podgroup-apiserver
    apiserver: "true"
spec:
  version: v1
  group: myapigroups.k8s.generals.space
  groupPriorityMinimum: 2000
  service:
    name: podgroup-apiserver
    namespace: default
  versionPriority: 10
  caBundle: "config/certificates/apiserver_ca.crt 的base64编码内容"
---
apiVersion: v1
kind: Service
metadata:
  name: podgroup-apiserver
  namespace: default
  labels:
    api: podgroup-apiserver
    apiserver: "true"
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 443
  selector:
    api: podgroup-apiserver
    apiserver: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podgroup-apiserver
  namespace: default
  labels:
    api: podgroup-apiserver
    apiserver: "true"
spec:
  selector:
    matchLabels:
      api: podgroup-apiserver
      apiserver: "true"
  replicas: 1
  template:
    metadata:
      labels:
        api: podgroup-apiserver
        apiserver: "true"
    spec:
      containers:
      - name: apiserver
        image: myapiserver:0.0.1
        volumeMounts:
        - name: apiserver-certs
          mountPath: /apiserver.local.config/certificates
          readOnly: true
        command:
        - "./apiserver"
        args:
        - "--etcd-servers=http://etcd-svc:2379"
        - "--tls-cert-file=/apiserver.local.config/certificates/tls.crt"
        - "--tls-private-key-file=/apiserver.local.config/certificates/tls.key"
        - "--audit-log-path=-"
        - "--audit-log-maxage=0"
        - "--audit-log-maxbackup=0"
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
          limits:
            cpu: 100m
            memory: 30Mi
      - name: controller
        image: myapiserver:0.0.1
        command:
        - "./controller-manager"
        args:
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
          limits:
            cpu: 100m
            memory: 30Mi
      volumes:
      - name: apiserver-certs
        secret:
          secretName: podgroup-apiserver
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: default
spec:
  selector:
    matchLabels:
      app: etcd
  serviceName: "etcd"
  replicas: 1
  template:
    metadata:
      labels:
        app: etcd
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
          limits:
            cpu: 100m
            memory: 30Mi
        env:
        - name: ETCD_DATA_DIR
          value: /etcd-data-dir
        command:
        - /usr/local/bin/etcd
        - --listen-client-urls
        - http://0.0.0.0:2379
        - --advertise-client-urls
        - http://localhost:2379
        ports:
        - containerPort: 2379
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /etcd-data-dir
        readinessProbe:
          httpGet:
            port: 2379
            path: /health
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            port: 2379
            path: /health
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
  volumeClaimTemplates:
  - metadata:
     name: etcd-data-dir
     annotations:
        volume.beta.kubernetes.io/storage-class: standard
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
         storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: etcd-svc
  namespace: default
  labels:
    app: etcd
spec:
  ports:
  - port: 2379
    name: etcd
    targetPort: 2379
  selector:
    app: etcd
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: podgroup-apiserver
  namespace: default
  labels:
    api: podgroup-apiserver
    apiserver: "true"
data:
  tls.crt: config/certificates/apiserver.crt 的base64编码内容
  tls.key: config/certificates/apiserver.key 的base64编码内容
