groups:
  - name: kubernetes-absent.rules
    rules:
      - alert: AlertmanagerDown
        annotations:
          description: Alertmanager has disappeared from Prometheus target discovery.
        expr: |
          absent(up{job="alertmanager"} == 1)
        for: 3m
        labels:
          severity: High
      - alert: CoreDNSDown
        annotations:
          description: CoreDNS has disappeared from Prometheus target discovery.
        expr: |
          absent(up{job="kube-dns"} == 1)
        for: 3m
        labels:
          severity: High
      - alert: KubeAPIDown
        annotations:
          description: KubeAPI has disappeared from Prometheus target discovery.
        expr: |
          absent(up{job="kubernetes-apiservers"} == 1)
        for: 3m
        labels:
          severity: High
      - alert: KubeControllerManagerDown
        annotations:
          description: "KubeControllerManager has disappeared from node: {{$labels.instance}} of 3 minutes."
        expr: |
          up{job="kube-controller-manager", job="kube-controller-manager",service="kube-controller-manager"}  < 0
        for: 3m
        labels:
          severity: High
      - alert: KubeSchedulerDown
        annotations:
          description: "KubeScheduler has disappeared from node: {{$labels.instance}} of 3 minutes."
        expr: |
          up{job="kube-scheduler",job="kube-scheduler",service="kube-scheduler"} < 1
        for: 3m
        labels:
          severity: High
      - alert: KubeStateMetricsDown
        annotations:
          description: KubeStateMetrics has disappeared from Prometheus target discovery.
        expr: |
          absent(up{job="kube-state-metrics"} == 1)
        for: 3m
        labels:
          severity: High
      - alert: NodeExporterDown
        annotations:
          description: "NodeExporter has disappeared from node: {{$labels.instance}} of 3 minutes."
        expr: |
          up{job="node-exporter"} < 1
        for: 3m
        labels:
          severity: High
  ## kubernetes-absent.rules end ...

  - name: kubernetes-system.rules
    rules:
    - alert: KubeClientRestErrors
      annotations:
        description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
          }}' is experiencing {{ printf "%0.0f" $value }}% errors.'
      expr: |
        (sum(rate(rest_client_requests_total{code!~"2.."}[5m])) by (instance, job)
          /
        sum(rate(rest_client_requests_total[5m])) by (instance, job))
        * 100 > 1
      for: 3m
      labels:
        severity: Warning
    - alert: KubeletTooManyPods
      annotations:
        description: Kubelet {{ $labels.instance }} is running {{ $value }} Pods, close
          to the limit of 20.
      expr: kubelet_running_pod_count{job="kubelet"} > 20
      for: 3m
      labels:
        severity: Warning
    - alert: KubeClientCertificateExpiration
      annotations:
        description: Kubernetes API certificate is expiring in less than 7 days.
      expr: |
        histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubernetes-apiservers"}[5m]))) < 604800
      labels:
        severity: Warning
  ## kubernetes-system.rules end ...

  - name: kubernetes-resources.rules
    rules:
      - alert: KubeMemOvercommit
        annotations:
          description: Cluster has overcommitted memory resource requests for Namespaces.
        expr: |
          sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="requests.memory"})
            /
          sum(node_memory_MemTotal_bytes{job="node-exporter"})
            > 1.5
        for: 5m
        labels:
          severity: Warning
      - alert: CPUThrottlingHigh
        annotations:
          description: '{{ printf "%0.0f" $value }}% throttling of CPU in namespace {{ $labels.namespace
            }} for container {{ $labels.container_name }} in pod {{ $labels.pod_name }}.'
        expr: 100 * sum(increase(container_cpu_cfs_throttled_periods_total{pod_name!=""}[5m]))
          by (container_name, pod_name, namespace) / sum(increase(container_cpu_cfs_periods_total{}[5m]))
          by (container_name, pod_name, namespace) > 60
        for: 3m
        labels:
          severity: Warning
  ## kubernetes-resources.rules end ...

  - name: pod_usage.rules
    rules:
      - alert: Pod_all_memory_usage
        expr: (sum by (name)(container_memory_usage_bytes{image!="",name!="zealous_ride"}) / (1024^3) ) > 5
        for: 3m
        labels:
          service: pod
          severity: High
        annotations:
          description: 容器 {{ $labels.name }} Memory 资源利用率大于 5G , (current value is {{$value}})
          summary: Pod Memory 负载告警
      - alert: pod_all_network_receive_usage
        expr: sum(irate(container_network_receive_bytes_total{container_name="POD"}[1m]))
          BY (name) > 1024 * 1024 * 50
        for: 3m
        labels:
          service: pod
          severity: High
        annotations:
          description: 容器 {{ $labels.name }} network_receive 资源利用率大于 50M , (current value is {{ $value }})
          summary: Pod network_receive 负载告警
  ## pod_usage.rules end ...

  - name: job_status.rules
    rules:
      - alert: job_status_failed
        expr: kube_job_status_failed > 0
        for: 3m
        labels:
          severity: Warning
        annotations:
          description: 'Job {{$labels.exported_job}} is in failed status'
          summary: '{{$labels.exported_job}} has failed status'
  ## job_status.rules end ...

  - name: pod_status.rules
    rules:
      - alert: pod_phase_status_error
        expr: kube_pod_status_phase{phase=~"Failed|Pending|Unknown"} == 1
        for: 3m
        labels:
          severity: Warning
        annotations:
          description: 'Pod {{$labels.pod}} in namespace {{$labels.namespace}} has been in {{$labels.phase}} status for more than 3 minutes'
          summary: 'Pod {{$labels.pod}} in namespace {{$labels.namespace}} in {{$labels.phase}} status'
      - alert: pod_create_status_error
        expr: kube_pod_container_status_waiting_reason{reason=~"CrashLoopBackOff|ErrImagePull|ImagePullBackOff|CreateContainerConfigError"} == 1
        for: 3m
        labels:
          severity: Warning
        annotations:
          description: 'Pod {{$labels.pod}} in namespace {{$labels.namespace}} has an {{$labels.reason}} error for more than 3 minutes'
          summary: 'Pod {{$labels.pod}} in namespace {{$labels.namespace}} in error status'
      - alert: pod_container_terminated
        expr: kube_pod_container_status_terminated_reason{reason=~"OOMKilled|Error|ContainerCannotRun"} > 0
        for: 3m
        labels:
          severity: Warning
        annotations:
          description: 'Pod {{$labels.pod}} in namespace {{$labels.namespace}} has a container terminated for more than 3 minutes'
          summary: 'Pod {{$labels.pod}} in namespace {{$labels.namespace}} in error status'
  ## pod_status.rules end ...

  - name: endpoints.rules
    rules:
      - alert: KubernetesEndpointsDown
        expr: kube_endpoint_address_not_ready > 0
        for: 3m
        labels:
          severity: High
        annotations:
          description: 'Kubernetes service name: {{$labels.endpoint}}, namespaces: {{$labels.namespace}}, instance: {{$labels.instance}}, endpoints error!'
  ## endpoints.rules end ...
