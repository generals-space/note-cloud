## kubeadm配置文件示例, 在`Directories`标题下, kuber.v1.17时有效的是`v1beta2`子目录
## https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm#pkg-subdirectories

## v1beta1 自 v1.17.0 开始被弃用.
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
kubernetesVersion: v1.16.2
imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers
## 用于生成apiserver匹配的证书及kubelet配置文件的请求入口.
controlPlaneEndpoint: "k8s-server-lb:8443"
clusterName: kubernetes
apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs:
    enable-admission-plugins: NodeRestriction
    authorization-mode: "Node,RBAC"
    endpoint-reconciler-type: lease
  ## kubectl 所用的 kubeconfig 中, cluster.server 的地址必须是该列表中的其中一个才能够访问.
  ## 比如, 在阿里云上创建 kube 集群, 公网IP是会变化的, controlPlaneEndpoint 只能写内网地址,
  ## 但是在本地开发时, kubeconfig 中如果写公网IP是无法访问集群的, 会被拒绝. 
  ## 因此这里最好设置一个域名, 本地将该域名与公网IP写入 hosts, IP变化就无法影响了.
  ## 默认一定会包含 control plane 的 hostname 值.
  certSANs:
  - kubernetes
  - k8s-master-01
  - ${eth0_IP}
networking:
  ## 这两个其实都是默认值
  podSubnet: "10.254.0.0/16"
  serviceSubnet: "10.96.0.0/12"
etcd:
  # one of local or external
  local:
    dataDir: /var/lib/etcd
    ## `serverCertSANs`与`PeerCertSANs`可以认为
    ## 分别是ssl双向认证中的主体CN.
    ## ta们的默认值都是`control plane`的hostname
    ## serverCertSANs:
    ## - "ec2-10-100-0-1.compute-1.amazonaws.com"
    ## peerCertSANs:
    ## - "10.100.0.1"

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
ipvs:
  minSyncPeriod: 1s
  syncPeriod: 10s
mode: ipvs
