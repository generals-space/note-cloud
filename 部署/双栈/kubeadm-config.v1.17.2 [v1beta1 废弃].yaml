## kubeadm配置文件示例, 在`Directories`标题下
## https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm#pkg-subdirectories

## v1beta1 自 v1.17.0 开始被弃用.
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
kubernetesVersion: v1.17.2
imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers
## 用于生成apiserver匹配的证书及kubelet配置文件的请求入口.
controlPlaneEndpoint: "k8s-server-lb:8443"
apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs:
    enable-admission-plugins: NodeRestriction
    authorization-mode: "Node,RBAC"
    endpoint-reconciler-type: lease
  ## kubectl 所用的 kubeconfig 中, cluster.server 的地址必须是该列表中的其中一个才能够访问.
  ## 比如, 在阿里云上创建 kube 集群, 公网IP是会变化的, controlPlaneEndpoint 只能写内网地址,
  ## 但是在本地开发时, kubeconfig 中如果写公网IP是无法访问集群的, 会被拒绝. 
  ## 因此这里最好设置一个域名, 本地将该域名与公网IP写入 hosts, IP变化就无法影响了.
  ## 默认一定会包含 control plane 的 hostname 值.
  certSANs:
  - kubernetes
  - k8s-master-01
  - ${eth0_IP}
featureGates:
  ## 开启 IPv6 双栈
  IPv6DualStack: true
## 这里是 kube-controller-manager 的配置.
controllerManager:
  extraArgs:
    ## 不知道这里的两个参数有什么用途...
    ## cluster-cidr == networking.podSubnet
    cluster-cidr: 10.254.0.0/16,2019:20::/24
    ## service-cluster-ip-range == networking.serviceSubnet
    ## 不过在双栈场景下, 这里还要加上 IPv6 的网段
    service-cluster-ip-range: 10.96.0.0/12,2019:30::/24
networking:
  ## 这两个其实 IPv4 都是默认值
  ## 要求开启双栈时需要指定 podSubnet 的 IPv6 的网段, 否则在升级时会报错
  ## $ kubeadm upgrade plan --config kubeadm-config.yaml
  ## podSubnet: Invalid value: "10.254.0.0/16": expected at least one IP from each family (v4 or v6) for dual-stack networking
  ## To see the stack trace of this error execute with --v=5 or higher
  ## 格式为: "IPv4,IPv6", 没有空格.
  podSubnet: 10.254.0.0/16,2019:20::/24
  ## ~~但是 serviceSubnet 不需要.~~
  ## 不是不需要, 是 kubeadm.v1.16.2 不能解析带 IPv6 部分的 serviceSubnet 字段, 这是 ta 的 bug.
  ## 将 kubeadm 升级到 v1.17.2 时就必须要加上 IPv6 了.
  serviceSubnet: 10.96.0.0/12
etcd:
  # one of local or external
  local:
    dataDir: /var/lib/etcd
    ## `serverCertSANs`与`PeerCertSANs`可以认为
    ## 分别是ssl双向认证中的主体CN.
    ## ta们的默认值都是`control plane`的hostname
    ## serverCertSANs:
    ## - "ec2-10-100-0-1.compute-1.amazonaws.com"
    ## peerCertSANs:
    ## - "10.100.0.1"

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
ipvs:
  minSyncPeriod: 1s
  syncPeriod: 10s
mode: ipvs
featureGates:
  SupportIPVSProxyMode: true
  ## 开启双栈
  IPv6DualStack: true
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
featureGates:
  ## 开启双栈
  IPv6DualStack: true
